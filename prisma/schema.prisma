generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  DELIVERED
  CANCELLED
}

model Category {
  id         String      @id @default(uuid())
  name       String
  image      String?
  products   Product[]
  promotions Promotion[]
}

model Product {
  id          String          @id @default(uuid())
  name        String
  description String
  price       Float
  image       String
  category    Category        @relation(fields: [categoryId], references: [id])
  categoryId  String
  isAvailable Boolean         @default(true)
  options     ProductOption[] // Relation 1:N
  createdAt   DateTime        @default(now())
  orderItems  OrderItem[]
}

enum ProductOptionType {
  size
  ingredient
  variable
  note
}

model ProductOption {
  id          String            @id @default(uuid())
  product     Product           @relation(fields: [productId], references: [id])
  productId   String
  name        String // Ej: “Big”, “Strawberry”, etc.
  price       Float // Specific price for this option
  type        ProductOptionType
  quantity    Int               @default(0) // Could be ignored
  isAvailable Boolean           @default(true)
}

model Promotion {
  id                 String      @id @default(uuid())
  name               String
  description        String
  discountPercentage Float
  originalPrice      Float
  promoPrice         Float
  image              String
  isActive           Boolean     @default(true)
  category           Category    @relation(fields: [categoryId], references: [id])
  categoryId         String
  createdAt          DateTime    @default(now())
  orderItems         OrderItem[]
}

model User {
  id          String   @id @default(uuid())
  name        String
  phoneNumber String   @unique
  email       String   @unique
  role        Role     @default(USER)
  password    String
  createdAt   DateTime @default(now())
  orders      Order[]
}

model PhoneNumberMenu {
  id        String   @id @default(uuid())
  label     String   @unique // 'demo', 'manual', etc.
  number    String // the number in international format
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Order {
  id         String      @id @default(uuid())
  shortId    String      @unique
  items      OrderItem[]
  totalPrice Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  address    String
  comment    String?
  user       User?       @relation(fields: [userId], references: [id])
  userId     String?
}

model OrderItem {
  id          String     @id @default(uuid())
  order       Order      @relation(fields: [orderId], references: [id])
  orderId     String
  product     Product?   @relation(fields: [productId], references: [id])
  productId   String?
  promotion   Promotion? @relation(fields: [promotionId], references: [id])
  promotionId String?
  quantity    Int
  unitPrice   Float
}
